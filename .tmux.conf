# Enable OSC 52 clipboard integration.
set -g set-clipboard on
set -g default-terminal "screen-256color"
# Enable true-color if tmux supports it. Hope to $deity our termimanl does.
if-shell "[[ `tmux -V | cut -d' ' -f2` -ge 2.1 ]]" 'set -ga terminal-overrides ",screen-256color:Tc"'
set -g history-limit 30000

set -g set-titles on                        # set terminal title
set -g set-titles-string '#W ‚óè #h'

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

# 24 hour clock
setw -g clock-mode-style 24

# Neovim does things correctly, so it must suffer:
# https://github.com/neovim/neovim/issues/2035.
set -sg escape-time 10

# In recent tmux versions (I estimate 2.4+), there:
#
# - Is no more need to use reattach-to-user-namespace(1) when using iTerm2
#   option "Applications in terminal may use clipboard". In 2.6+, not even that
#   will be required anymore, as tmux will include that functionality natively.
# - Copying works cross application without setting up copy-pipe to
#   pbcopy(1)/xsel(1). This requires the terminal to be able to write to the
#   clipboard (see OSC 52 clipboard control). urxvt on linux does *not* support
#   this. Which means that urxvt still requires copy-pipe instead of
#   copy-selection-*, or a Perl extension
#   (example:
#   https://github.com/parantapa/dotfiles/blob/master/urxvt-perl/52-osc). Also
#   see
#   https://github.com/tmux/tmux/wiki/FAQ#how-do-i-copy-a-selection-from-tmux-to-the-systems-clipboard.

# Setup 'v' to begin visual selection as in Vim, and 'y' to yank.
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection-and-cancel
